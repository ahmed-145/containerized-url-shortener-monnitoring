# Prometheus Configuration for URL Shortener Monitoring

global:
  scrape_interval: 15s # Scrape targets every 15 seconds
  evaluation_interval: 15s # Evaluate rules every 15 seconds
  
  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'url-shortener-monitor'
    environment: 'production'

# Alertmanager configuration (optional for Week 2)
# alerting:
#   alertmanagers:
#     - static_configs:
#         - targets:
#           # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
# rule_files:
#   - "alerts.yml"

# A scrape configuration containing exactly one endpoint to scrape:
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'url-shortener-backend'
    
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    
    # Override the global default and scrape targets from this job every 10 seconds.
    scrape_interval: 10s
    scrape_timeout: 5s
    
    static_configs:
      - targets: ['backend:3000']
        labels:
          service: 'url-shortener'
          component: 'backend-api'
    
    # Relabeling to customize metric labels
    metric_relabel_configs:
      # Drop metrics that are too noisy or not needed
      - source_labels: [__name__]
        regex: 'go_.*'
        action: drop

  # Prometheus self-monitoring
  - job_name: 'prometheus'
    scrape_interval: 30s
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'monitoring'
          component: 'prometheus'